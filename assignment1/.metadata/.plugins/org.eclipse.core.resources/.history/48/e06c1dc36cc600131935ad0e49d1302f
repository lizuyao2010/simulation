import java.util.*;

class State extends GlobalSimulation{
	
	// Here follows the state variables and other variables that might be needed
	// e.g. for measurements 
	public double xA = 0.002, xB = 0.004, lambda = 1.0/150;
	public int nbrAinQ = 0, nbrBinQ = 0, nbrSamples = 0;
	public boolean Qbusy = false;

	Random slump = new Random(); // This is just a random number generator
	
	//Function to pick a random number from an exponential distribution with 
	//mean mu 
	public double expRandom(double mu){
		double u = slump.nextDouble();
		return -1*mu*Math.log(1-u);
	}
	
	// The following method is called by the main program each time a new event has been fetched
	// from the event list in the main loop. 
	public void treatEvent(Event x){
		switch (x.eventType){
			case ARRIVALA:
				arrivalA();
				break;
			case DELAY:
				delay();
			case ARRIVALB:
				arrivalB();
				break;
			case READY:
				ready();
				break;
			case MEASURE:
				measure();
				break;
		}
	}
	
	
	// The following methods defines what should be done when an event takes place. This could
	// have been placed in the case in treatEvent, but often it is simpler to write a method if 
	// things are getting more complicated than this.
	
	private void arrivalA(){
		if(Qbusy){
			nbrAinQ++;
		}else{
			Qbusy = true;
			insertEvent(DELAY, time + xA);
		}
		
		insertEvent(ARRIVALA, time + expRandom(1/lambda));
	}
	
	private void delay(){
		
	}
	private void arrivalB(){
		
	}
	private void ready(){
	
	}
	
	private void measure(){
	
	}
}